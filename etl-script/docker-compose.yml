# version: "3.8"

services:
  mysql-container:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} # user: root, password: ...
      - MYSQL_DATABASE=${MYSQL_DATABASE} # accounting_db2
    ports:
      - 3306:3306
    volumes:
      - mysql-volume:/var/lib/mysql
      - ./init/accounting_db2.sql:/docker-entrypoint-initdb.d/accounting_db2.sql:ro # DDL and insert data to database
    networks:
      - mynet
    restart: unless-stopped

  postgres-container:
    image: postgres:15-alpine
    container_name: postgres-container
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB} # accounting_dwh
    ports:
      - 5432:5432
    volumes:
      - pg-volume:/var/lib/postgresql/data
      - ./init/accounting_dwh.sql:/docker-entrypoint-initdb.d/accounting_dwh.sql:ro # DDL
    networks:
      - mynet
    restart: unless-stopped

  minio-container:
    image: minio/minio:latest
    container_name: minio-container
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - 9000:9000 # connect to minio through API
      - 9001:9001 # web UI
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - mynet
    restart: unless-stopped

  airflow-container:
    # image: apache/airflow:2.3.0-python3.10
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-container
    environment:
      # connect to postgres-container: AIRFLOW_CONN_<conn_id>=postgresql://<username>:<password>@<host>:<port>/<database>
      - AIRFLOW_CONN_MYSQL_CONN=mysql://${MYSQL_USER}:${MYSQL_ROOT_PASSWORD}@mysql-container:3306/${MYSQL_DATABASE}
      - AIRFLOW_CONN_PG_CONN=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-container:5432/${POSTGRES_DB}
      - AIRFLOW_CONN_MINIO_CONN=s3://${MINIO_ROOT_USER}:${MINIO_ROOT_PASSWORD}@minio-container:9000
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    ports:
      - 8080:8080
    volumes:
      - ./src:/opt/airflow/dags
      - ./data:/var/tmp
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username airflow --password 123456 --firstname manh --lastname td --role Admin --email tdmanh1510@gmail.com;
      airflow webserver &
      airflow scheduler
      "
    networks:
      - mynet
    restart: unless-stopped
    depends_on:
      - mysql-container
      - minio-container
      - postgres-container
    env_file:
      - ./.env

  # minio-bucket-init:
  #   image: python:3.10-slim
  #   container_name: minio-bucket-init
  #   volumes:
  #     - ./init:/init
  #   command: >
  #     /bin/sh -c "pip install --no-cache-dir minio && python /init/init_buckets.py"
  #   networks:
  #     - mynet
  #   restart: on-failure
  #   depends_on:
  #     - minio-container

volumes:
  mysql-volume:
    name: mysql-volume
  pg-volume:
    name: pg-volume
  minio-data:
    name: minio-data

networks:
  mynet:
    name: mynet
    driver: bridge
